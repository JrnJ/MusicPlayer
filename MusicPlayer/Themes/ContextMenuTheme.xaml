<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=System.Runtime">

    <!--https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-3.5/ms747082(v=vs.90)?redirectedfrom=MSDN-->

    <Style TargetType="{x:Type MenuItem}">
        <Style.Triggers>
            <!--Every Item-->
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Background" Value="Orange" />
                <Setter Property="Foreground" Value="Black" />
                <!--<Setter Property="Template" Value="{StaticResource MenuItemStyle}" />-->
            </Trigger>

            <!--Item with extra Items inside Item-->
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Background" Value="Cyan" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>

            <!--Not sure yet-->
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Background" Value="Blue" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>

            <!--Not sure yet-->
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Background" Value="Green" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate TargetType="{x:Type MenuItem}" x:Key="MenuItemStyle">
        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="templateRoot" SnapsToDevicePixels="True">
            <Grid Margin="-1,-1,-1,-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="13" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Content="{TemplateBinding MenuItem.Icon}" 
                                  ContentSource="Icon" Name="Icon" 
                                  Width="16" Height="16" 
                                  Margin="3,3,3,3" 
                                  HorizontalAlignment="Center" VerticalAlignment="Center" 
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <Border BorderThickness="1" BorderBrush="#FF26A0DA" 
                        Background="#3D26A0DA" Name="GlyphPanel" 
                        Width="22" Height="22" 
                        Margin="-1,0,0,0" 
                        HorizontalAlignment="Center" VerticalAlignment="Center" 
                        Visibility="Hidden" 
                        ClipToBounds="False">
                    <Path Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" 
                          Fill="#FF212121" 
                          Name="Glyph" 
                          Width="10" Height="11" 
                          FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" Name="menuHeaderContainer" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="Left" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Grid.Column="2" />
                <TextBlock Text="{TemplateBinding MenuItem.InputGestureText}" Name="menuGestureText" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="Center" Opacity="0.7" Grid.Column="4" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.Icon">
                <Setter Property="UIElement.Visibility" TargetName="Icon">
                    <Setter.Value>
                        <x:Static Member="Visibility.Collapsed" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Null />
                </Trigger.Value>
            </Trigger>
            <Trigger Property="MenuItem.IsChecked">
                <Setter Property="UIElement.Visibility" TargetName="GlyphPanel">
                    <Setter.Value>
                        <x:Static Member="Visibility.Visible" />
                    </Setter.Value>
                </Setter>
                <Setter Property="UIElement.Visibility" TargetName="Icon">
                    <Setter.Value>
                        <x:Static Member="Visibility.Collapsed" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted">
                <Setter Property="Panel.Background" TargetName="templateRoot">
                    <Setter.Value>
                        <SolidColorBrush>#3D26A0DA</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                    <Setter.Value>
                        <SolidColorBrush>#FF26A0DA</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot">
                    <Setter.Value>
                        <SolidColorBrush>#FF707070</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Shape.Fill" TargetName="Glyph">
                    <Setter.Value>
                        <SolidColorBrush>#FF707070</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="MenuItem.IsHighlighted">
                        <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                        </Condition.Value>
                    </Condition>
                    <Condition Property="UIElement.IsEnabled">
                        <Condition.Value>
                            <s:Boolean>False</s:Boolean>
                        </Condition.Value>
                    </Condition>
                </MultiTrigger.Conditions>
                <Setter Property="Panel.Background" TargetName="templateRoot">
                    <Setter.Value>
                        <SolidColorBrush>#0A000000</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                    <Setter.Value>
                        <SolidColorBrush>#21000000</SolidColorBrush>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--<Style TargetType="{x:Type MenuItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid ToolTip="{TemplateBinding Header}" Height="24" Background="Green" Width="{TemplateBinding Width}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="*" MinWidth="80"/>
                        </Grid.ColumnDefinitions>
                        
                        <Border Background="Red" />
                        <Border x:Name="_border" 
                                Grid.ColumnSpan="2"/>
                        
                        <Image x:Name="_imgicon" 
                               Width="12" Height="12" 
                               Stretch="Uniform" 
                               Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="_txt" Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"
                            Grid.Column="1"
                            Foreground="Blue" Margin="5 0 15 0" VerticalAlignment="Center" />
                        <Path Visibility="Collapsed" x:Name="_path" Grid.Column="1" HorizontalAlignment="Right" Margin="5 13 5 0"  Data="M0,4 4,0 0,-4 z" Fill="#7E8A92"/>
                        
                        <Popup Placement="Right" x:Name="SubMenuPopup" AllowsTransparency="True"  Focusable="False" IsOpen="{TemplateBinding IsSubmenuOpen}" >
                            <ScrollViewer  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                <Border Background="#ffc787" Name="SubmenuBorder" BorderBrush="LightGray" BorderThickness="1" SnapsToDevicePixels="True"  >
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Border>
                            </ScrollViewer>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="True">
                            <Setter TargetName="_path" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="_border" Property="Background" Value="#ffc787" />
                            <Setter TargetName="_txt" Property="Foreground" Value="White" />
                            <Setter TargetName="_path" Property="Fill" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="_txt" Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader" />

        </Style.Triggers>
    </Style>-->

    <!--<Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="HasDropShadow" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Name="Border"
                            Background="Green"
                            BorderBrush="Red"
                            BorderThickness="1">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="Red" />
        <Setter Property="BorderBrush" Value="Green" />

        <Style.Resources>
            <Style TargetType="MenuItem">
                <Setter Property="Background" Value="Blue" />
                <Setter Property="BorderBrush" Value="Orange" />

                
            </Style>
        </Style.Resources>
    </Style>-->

    <!--<Style TargetType="{x:Type MenuItem}">
        <Style.Triggers>
            --><!--Every Item--><!--
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Background" Value="Orange" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>

            --><!--Item with extra Items inside Item--><!--
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Background" Value="Cyan" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>

            --><!--Not sure yet--><!--
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Background" Value="Blue" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>

            --><!--Not sure yet--><!--
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Background" Value="Green" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <!--<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="0,4,0,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="Yellow" BorderThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    --><!-- SubmenuItem--><!--
    
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter Name="Icon"
                                  Margin="6,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon" />

                <Border Name="Check"  
                        Width="13" Height="13" 
                        Visibility="Collapsed"
                        Margin="6,0,6,0" 
                        Background="Blue"
                        BorderThickness="1"
                        BorderBrush="Cyan">
                    <Path Name="CheckMark"
                          Width="7" Height="7" 
                          Visibility="Hidden" 
                          SnapsToDevicePixels="False" 
                          Stroke="Orange"
                          StrokeThickness="2"
                          Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                </Border>

                <ContentPresenter Name="HeaderHost"
                                  Grid.Column="1"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"/>
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="5,2,0,2"
                           DockPanel.Dock="Right" /> 
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>

            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="Green"/>
            </Trigger>

            --><!--<Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="Red"/>
            </Trigger>--><!--
        </ControlTemplate.Triggers>
    </ControlTemplate>-->
</ResourceDictionary>